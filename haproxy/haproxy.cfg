global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
root@mtha:~# cat /etc/haproxy/haproxy.cfg
global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend www
   bind *:80
   monitor-uri /health
   option http-server-close
   option forwardfor
   default_backend web-backend
   #http-response set-header X-Backend nginx

   acl url_static path_end .gif .png .jpg .jpeg .css .js .htm .html
   acl use_varnish path_beg /pages/test
   acl admin hdr(host) -i admin.mturkcrowd.com
   acl w1 hdr(host) -i w1.mturkcrowd.com
   acl w2 hdr(host) -i w2.mturkcrowd.com

   use_backend varnish-backend if use_varnish
   http-response set-header X-Backend varnish if use_varnish

   use_backend varnish-backend if url_static
   http-response set-header X-Backend varnish if url_static

   use_backend admin if admin
   http-response set-header X-Backend admin if admin

   use_backend w1 if w1
   http-response set-header X-Backend w1 if admin

   use_backend w2 if w2
   http-response set-header X-Backend w2 if admin

backend web-backend
   option httpchk GET /health.json HTTP/1.1\r\nHost:\www.mturkcrowd.com
   #balance uri
   #hash-type consistent djb2
   server www1 10.134.125.4:8080 weight 1 maxconn 30 check inter 5s
   server www2 10.134.33.19:8080 weight 1 maxconn 30 check inter 5s

backend varnish-backend
   option httpchk GET /health.json HTTP/1.1\r\nHost:\www.mturkcrowd.com
   balance uri
   hash-type consistent djb2
   server www1 10.134.125.4:6081 weight 1 maxconn 30 check inter 5s
   server www2 10.134.33.19:6081 weight 1 maxconn 30 check inter 5s

backend admin
   option httpchk GET /health.json HTTP/1.1\r\nHost:\www.mturkcrowd.com
   server www1 10.134.125.4:8080 weight 1 maxconn 30 check inter 5s
   http-request set-header Host www.mturkcrowd.com

backend w1
   option httpchk GET /health.json HTTP/1.1\r\nHost:\www.mturkcrowd.com
   server www1 10.134.125.4:8080 weight 1 maxconn 30 check inter 5s
   http-request set-header Host www.mturkcrowd.com

backend w2
   option httpchk GET /health.json HTTP/1.1\r\nHost:\www.mturkcrowd.com
   server www2 10.134.33.19:8080 weight 1 maxconn 30 check inter 5s
   http-request set-header Host www.mturkcrowd.com

listen stats :22002
   stats enable
   stats uri /

